@startuml bridge

Gracz "4" ---right--- "1" Gra : graja

Gra "1" - "1" Talia : uzywa

Talia "1 sklada sie z 52" -up- "nalezy do" Karta 

Gra "1" -- "*" Tura : sklada sie z

Tura "1" -left- "1" Licytacja : zawiera
Tura "1" -- "1" Rozgrywka : zawiera

Licytacja "1" -left- "*" Odzywka: sklada sie z 
Rozgrywka "1" -right- "0..*" Lewa : sklada sie z

Odzywka <- Kontrakt
Rozgrywka - Kontrakt : zawiera

ParaGraczy "1" --down--- "2" Gracz : dobierani sa

Licytacja "1" --- "1" Kontrakt : konczy sie 

Gracz "1" -up- "1" Reka
Reka "1" -right- "0..13" Karta : zawiera

ParaGraczy -- Lewa : wygrywa
Gracz --- Odzywka : zagrywa


class Karta {
       +int kolor // enum
       +int starszenstwo
}

class Talia {
       +Karta[] karty
       +void tasuj()
       +Reka wybierz13losowych()
}

class ParaGraczy {
       +Gracz gracz1
       +Gracz gracz2
}

class Reka {
       +Karta[] karty
}


class Gracz {
       +Reka reka 
       +Kontrakt deklarujKontrakt()
       +Odzywka licytuj()
}

class Tura {
       +Licytacja licytacja
       +Rozgrywka rozgrywka 
       +void rozegrajTure()
}

class Licytacja {
       +Odzywka[] odzywki
       +Kontrakt wynikowyKontrakt
       +void przeprowadzLicytacje()
}

class Rozgrywka {
       +Gracz rozgrywajacy
       +Kontrakt obowiazujacyKontrakt
       +Lewa[] lewy 
       +void rozdajKarty()
       +void rozgrywajLewy()
       +void rozliczKontrakt()
}

class Lewa {
       +Karta[] karty 
}

class Punktacja {
       int liczPunkty(Rozgrywka)
}

class Odzywka {
       +Gracz deklarujacy
       +int typ // enum 
}

class Kontrakt {
       +Gracz deklarujacy
       +int kolor // enum
       +int wartosc
}

class Gra {
       +Gracz[] gracze
       +Tura[] tury
       +Talia talia 
       +void rozegrajTure()
}

@enduml bridge
